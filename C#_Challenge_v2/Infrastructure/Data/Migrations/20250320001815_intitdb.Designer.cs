// <auto-generated />
using System;
using C__Challenge_v2.Infrastructure.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace C__Challenge_v2.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250320001815_intitdb")]
    partial class intitdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.ClienteEntity", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("TipoPlano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("IdCliente");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tbV2_Cliente");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.ConsultaEntity", b =>
                {
                    b.Property<Guid>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ClienteCpfCnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid>("ClienteIdCliente")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DateConsulta")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("DentistaCpfCnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid>("DentistaIdDentista")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<double>("ValorMedioConsulta")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("IdConsulta");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("DentistaIdDentista");

                    b.ToTable("tbV2_Consulta");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.DentistaEntity", b =>
                {
                    b.Property<Guid>("IdDentista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("AlvaraFuncionamento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(1)");

                    b.Property<string>("CepClinica")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("NomeClinica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("SiteRedesSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("TipoClinica")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("IdDentista");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tbV2_Dentista");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)");

                    b.HasKey("IdUsuario");

                    b.ToTable("tbV2_Usuario");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.ClienteEntity", b =>
                {
                    b.HasOne("C__Challenge_v2.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.ConsultaEntity", b =>
                {
                    b.HasOne("C__Challenge_v2.Domain.Entities.ClienteEntity", "Cliente")
                        .WithMany("Consultas")
                        .HasForeignKey("ClienteIdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C__Challenge_v2.Domain.Entities.DentistaEntity", "Dentista")
                        .WithMany("Consultas")
                        .HasForeignKey("DentistaIdDentista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Dentista");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.DentistaEntity", b =>
                {
                    b.HasOne("C__Challenge_v2.Domain.Entities.UsuarioEntity", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.ClienteEntity", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("C__Challenge_v2.Domain.Entities.DentistaEntity", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
